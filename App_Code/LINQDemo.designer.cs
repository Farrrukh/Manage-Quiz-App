#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyData")]
public partial class LINQDemoDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCourse(Course instance);
  partial void UpdateCourse(Course instance);
  partial void DeleteCourse(Course instance);
  partial void InsertQuiz(Quiz instance);
  partial void UpdateQuiz(Quiz instance);
  partial void DeleteQuiz(Quiz instance);
  #endregion
	
	public LINQDemoDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MyDataConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public LINQDemoDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LINQDemoDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LINQDemoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LINQDemoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Course> Courses
	{
		get
		{
			return this.GetTable<Course>();
		}
	}
	
	public System.Data.Linq.Table<Quiz> Quizs
	{
		get
		{
			return this.GetTable<Quiz>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course")]
public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private EntitySet<Quiz> _Quizs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public Course()
	{
		this._Quizs = new EntitySet<Quiz>(new Action<Quiz>(this.attach_Quizs), new Action<Quiz>(this.detach_Quizs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Quiz", Storage="_Quizs", ThisKey="Id", OtherKey="CourseId")]
	public EntitySet<Quiz> Quizs
	{
		get
		{
			return this._Quizs;
		}
		set
		{
			this._Quizs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Quizs(Quiz entity)
	{
		this.SendPropertyChanging();
		entity.Course = this;
	}
	
	private void detach_Quizs(Quiz entity)
	{
		this.SendPropertyChanging();
		entity.Course = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quiz")]
public partial class Quiz : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _QuestionDescription;
	
	private string _Choice1;
	
	private string _Choice2;
	
	private string _Choice3;
	
	private string _Choice4;
	
	private System.Nullable<int> _CourseId;
	
	private string _CorrectChoice;
	
	private EntityRef<Course> _Course;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQuestionDescriptionChanging(string value);
    partial void OnQuestionDescriptionChanged();
    partial void OnChoice1Changing(string value);
    partial void OnChoice1Changed();
    partial void OnChoice2Changing(string value);
    partial void OnChoice2Changed();
    partial void OnChoice3Changing(string value);
    partial void OnChoice3Changed();
    partial void OnChoice4Changing(string value);
    partial void OnChoice4Changed();
    partial void OnCourseIdChanging(System.Nullable<int> value);
    partial void OnCourseIdChanged();
    partial void OnCorrectChoiceChanging(string value);
    partial void OnCorrectChoiceChanged();
    #endregion
	
	public Quiz()
	{
		this._Course = default(EntityRef<Course>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionDescription", DbType="NVarChar(400)")]
	public string QuestionDescription
	{
		get
		{
			return this._QuestionDescription;
		}
		set
		{
			if ((this._QuestionDescription != value))
			{
				this.OnQuestionDescriptionChanging(value);
				this.SendPropertyChanging();
				this._QuestionDescription = value;
				this.SendPropertyChanged("QuestionDescription");
				this.OnQuestionDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Choice1", DbType="NVarChar(200)")]
	public string Choice1
	{
		get
		{
			return this._Choice1;
		}
		set
		{
			if ((this._Choice1 != value))
			{
				this.OnChoice1Changing(value);
				this.SendPropertyChanging();
				this._Choice1 = value;
				this.SendPropertyChanged("Choice1");
				this.OnChoice1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Choice2", DbType="NVarChar(200)")]
	public string Choice2
	{
		get
		{
			return this._Choice2;
		}
		set
		{
			if ((this._Choice2 != value))
			{
				this.OnChoice2Changing(value);
				this.SendPropertyChanging();
				this._Choice2 = value;
				this.SendPropertyChanged("Choice2");
				this.OnChoice2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Choice3", DbType="NVarChar(200)")]
	public string Choice3
	{
		get
		{
			return this._Choice3;
		}
		set
		{
			if ((this._Choice3 != value))
			{
				this.OnChoice3Changing(value);
				this.SendPropertyChanging();
				this._Choice3 = value;
				this.SendPropertyChanged("Choice3");
				this.OnChoice3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Choice4", DbType="NVarChar(200)")]
	public string Choice4
	{
		get
		{
			return this._Choice4;
		}
		set
		{
			if ((this._Choice4 != value))
			{
				this.OnChoice4Changing(value);
				this.SendPropertyChanging();
				this._Choice4 = value;
				this.SendPropertyChanged("Choice4");
				this.OnChoice4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="Int")]
	public System.Nullable<int> CourseId
	{
		get
		{
			return this._CourseId;
		}
		set
		{
			if ((this._CourseId != value))
			{
				if (this._Course.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCourseIdChanging(value);
				this.SendPropertyChanging();
				this._CourseId = value;
				this.SendPropertyChanged("CourseId");
				this.OnCourseIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectChoice", DbType="NVarChar(200)")]
	public string CorrectChoice
	{
		get
		{
			return this._CorrectChoice;
		}
		set
		{
			if ((this._CorrectChoice != value))
			{
				this.OnCorrectChoiceChanging(value);
				this.SendPropertyChanging();
				this._CorrectChoice = value;
				this.SendPropertyChanged("CorrectChoice");
				this.OnCorrectChoiceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Quiz", Storage="_Course", ThisKey="CourseId", OtherKey="Id", IsForeignKey=true)]
	public Course Course
	{
		get
		{
			return this._Course.Entity;
		}
		set
		{
			Course previousValue = this._Course.Entity;
			if (((previousValue != value) 
						|| (this._Course.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Course.Entity = null;
					previousValue.Quizs.Remove(this);
				}
				this._Course.Entity = value;
				if ((value != null))
				{
					value.Quizs.Add(this);
					this._CourseId = value.Id;
				}
				else
				{
					this._CourseId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Course");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
